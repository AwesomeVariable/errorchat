{"version":3,"sources":["googlebase.js","components/AuthForm.js","routes/Auth.js","components/Chat.js","components/ChatFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","stService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","err","setErr","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Chat","chatObj","isOwner","edit","setEdit","text","newChat","setNewChat","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEdit","update","autoFocus","src","class","faTrash","faPencilAlt","ChatFactory","userObj","chat","setChat","fileUrl","setfileUrl","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","oneFile","files","fileReader","FileReader","onloadend","doneEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","chats","setChats","useEffect","orderBy","onSnapshot","snapshot","chatArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","faComment","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","loadUser","newName","setNewName","updateProfile","backgroundColor","signOut","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","any","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAcAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,kCACZE,UAAWF,kBACXG,cAAeH,8BACfI,kBAAmBJ,eACnBK,MAAOL,8CAIF,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAYd,IAASe,U,OCuDnBC,EAtEE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAsBN,mBAAS,IAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KAEMC,EAAW,SAACC,GAChB,MAEIA,EADFC,OAAUC,EADZ,EACYA,KAAMC,EADlB,EACkBA,MAGL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAGVC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACfL,EAAMM,iBADS,UAITX,EAJS,gCAKEZ,EAAYwB,+BACvBhB,EACAE,GAPS,OAKXe,EALW,+CAUEzB,EAAY0B,2BAA2BlB,EAAOE,GAVhD,QAUXe,EAVW,eAYbE,QAAQC,IAAIH,GAZC,kDAcbV,EAAO,KAAMc,SAdA,0DAAH,sDAkBd,OACE,qCACE,uBAAMR,SAAUA,EAAUS,UAAU,YAApC,UACE,uBACEX,KAAK,QACLY,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRjB,SAAUA,EACVI,MAAOZ,EACPsB,UAAU,cAEZ,uBACEX,KAAK,WACLY,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRjB,SAAUA,EACVI,MAAOV,EACPoB,UAAU,cAEZ,uBACEC,KAAK,SACLD,UAAU,uBACVV,MAAOR,EAAa,UAAY,UAEjCE,GAAO,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAEvC,sBAAMgB,UAAU,aAAaI,QA7BX,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MA6BjD,SACGvB,EAAa,QAAU,gB,gBC5BjBwB,EAjCF,WACX,IAAMC,EAAa,uCAAG,WAAOpB,GAAP,mBAAAK,EAAA,4DAKP,YAHDH,EACRF,EADFC,OAAUC,QAIVmB,EAAW,IAAIvC,EAAiBE,KAAKsC,oBAE1B,WAATpB,IACFmB,EAAW,IAAIvC,EAAiBE,KAAKuC,oBATnB,SAWDxC,EAAYyC,gBAAgBH,GAX3B,OAWdb,EAXc,OAYpBE,QAAQC,IAAIH,GAZQ,2CAAH,sDAenB,OACE,sBAAKK,UAAU,gBAAf,UACE,oBAAIA,UAAU,kBAAd,kCACA,cAAC,EAAD,IACA,sBAAKA,UAAU,WAAf,UACE,yBAAQI,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,+BACoB,cAAC,IAAD,CAAiBY,KAAMC,SAG3C,yBAAQT,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,+BACoB,cAAC,IAAD,CAAiBY,KAAME,gB,iBC0CpCC,EArEF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACvB,EAAwBxC,oBAAS,GAAjC,mBAAOyC,EAAP,KAAaC,EAAb,KACA,EAA8B1C,mBAASuC,EAAQI,MAA/C,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAa,uCAAG,sBAAA/B,EAAA,0DACTgC,OAAOC,QAChB,yEAFkB,gCAMZrD,EAAUsD,IAAV,gBAAuBV,EAAQW,KAAMC,SANzB,uBAOZtD,EAAUuD,WAAWb,EAAQc,eAAeF,SAPhC,2CAAH,qDAUbG,EAAa,kBAAMZ,GAAQ,SAACd,GAAD,OAAWA,MACtCd,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBACNI,QAAQC,IAAIkB,EAASK,GAFN,SAGTjD,EAAUsD,IAAV,gBAAuBV,EAAQW,KAAMK,OAAO,CAChDZ,KAAMC,IAJO,OAMfF,GAAQ,GANO,2CAAH,sDAcd,OACE,qBAAKnB,UAAU,QAAf,SACGkB,EACC,qCACE,uBAAM3B,SAAUA,EAAUS,UAAU,sBAApC,UACE,uBACEC,KAAK,OACLC,YAAY,kBACZZ,MAAO+B,EACPlB,UAAQ,EACR8B,WAAS,EACT/C,SAjBK,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZgC,EAAWhC,IAcDU,UAAU,cAEZ,uBAAOC,KAAK,SAASD,UAAU,UAAUV,MAAM,cAEjD,wBAAQc,QAAS2B,EAAY/B,UAAU,oBAAvC,uBAKF,qCACG,IACD,6BAAKgB,EAAQI,OACZJ,EAAQc,eAAiB,qBAAKI,IAAKlB,EAAQc,gBAC3Cb,GACC,sBAAKkB,MAAM,iBAAX,UACE,sBAAM/B,QAASmB,EAAf,SACE,cAAC,IAAD,CAAiBX,KAAMwB,QAEzB,sBAAMhC,QAAS2B,EAAf,SACE,cAAC,IAAD,CAAiBnB,KAAMyB,iB,SCiCxBC,EA3FK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,EAAwB9D,mBAAS,IAAjC,mBAAO+D,EAAP,KAAaC,EAAb,KACA,EAA8BhE,mBAAS,IAAvC,mBAAOiE,EAAP,KAAgBC,EAAhB,KACMpD,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACF,KAATgD,EADW,oDAIfrD,EAAMM,iBACFqC,EAAgB,GACJ,KAAZY,EANW,wBAOPE,EAAUtE,EAAUuE,MAAMC,MAAhB,UAAyBP,EAAQQ,IAAjC,YAAwCC,gBAP3C,SAQUJ,EAAQK,UAAUP,EAAS,YARrC,cAQPQ,EARO,iBASSA,EAASL,IAAIM,iBATtB,QASbrB,EATa,sBAWTd,EAAU,CACdI,KAAMoB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBjB,iBAfa,UAiBT1D,EAAUoF,WAAW,SAASC,IAAIzC,GAjBzB,QAkBfyB,EAAQ,IACRE,EAAW,IAnBI,4CAAH,sDA0Cd,OACE,uBAAMpD,SAAUA,EAAUS,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,sBACVV,MAAOkD,EACPtD,SA3BS,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZmD,EAAQnD,IAwBFW,KAAK,OACLC,YAAY,uBACZwD,UAAW,MAEb,uBAAOzD,KAAK,SAASX,MAAM,SAASU,UAAU,2BAEhD,wBAAO2D,IAAI,cAAc3D,UAAU,sBAAnC,UACE,8CACA,cAAC,IAAD,CAAiBY,KAAMgD,SAGzB,uBACEjC,GAAG,cACH1B,KAAK,OACL4D,OAAO,UACP3E,SArCe,SAACC,GACpB,IAGM2E,EADF3E,EADFC,OAAU2E,MAEU,GAChBC,EAAa,IAAIC,WACvBD,EAAWE,UAAY,SAACC,GACtB,IACmBC,EACfD,EADFE,cAAiBD,OAEnBzB,EAAWyB,IAEbJ,EAAWM,cAAcR,IA0BrBS,MAAO,CACLC,QAAS,KAIZ9B,GACC,sBAAK1C,UAAU,0BAAf,UACE,qBACEkC,IAAKQ,EACL6B,MAAO,CACLE,gBAAiB/B,KAGrB,sBAAK1C,UAAU,qBAAqBI,QArClB,kBAAMuC,EAAW,KAqCnC,UACE,0CACA,cAAC,IAAD,CAAiB/B,KAAM8D,gBCpDpBC,EAhCF,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QACd,EAA0B9D,mBAAS,IAAnC,mBAAOmG,EAAP,KAAcC,EAAd,KAeA,OAbAC,qBAAU,WACR1G,EACGoF,WAAW,SACXuB,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACX,IAAMC,EAAYD,EAASE,KAAKC,KAAI,SAAC1D,GAAD,oBAClCC,GAAID,EAAIC,IACLD,EAAI/B,WAETkF,EAASK,QAEZ,IAGD,sBAAKlF,UAAU,YAAf,UACE,cAAC,EAAD,CAAauC,QAASA,IACtB,qBAAKgC,MAAO,CAAEc,UAAW,IAAzB,SACGT,EAAMQ,KAAI,SAAC5C,GAAD,OACT,cAAC,EAAD,CAEExB,QAASwB,EACTvB,QAASuB,EAAKe,YAAchB,EAAQQ,KAF/BP,EAAKb,aCUP2D,EA/BI,SAAC,GAAD,IAAG/C,EAAH,EAAGA,QAAH,OACjB,8BACE,qBAAIgC,MAAO,CAAEgB,QAAS,OAAQC,eAAgB,SAAUH,UAAW,IAAnE,UACE,6BACE,cAAC,IAAD,CAAMI,GAAG,IAAIlB,MAAO,CAAEmB,YAAa,IAAnC,SACE,cAAC,IAAD,CAAiB9E,KAAM+E,IAAWC,MAAO,cAAeC,KAAK,WAGjE,6BACE,eAAC,IAAD,CACEJ,GAAG,WACHlB,MAAO,CACLuB,WAAY,GACZP,QAAS,OACTQ,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUE,cAAC,IAAD,CAAiBrF,KAAMsF,IAAQN,MAAO,cAAeC,KAAK,OAC1D,sBAAMtB,MAAO,CAAEc,UAAW,IAA1B,SACG9C,EAAQ4D,YAAR,UACM5D,EAAQ4D,YADd,cAEG,uBCzBD,G,OAAA,YAA4B,IAAzBC,EAAwB,EAAxBA,SAAU7D,EAAc,EAAdA,QAC1B,EAA8B9D,mBAAS8D,EAAQ4D,aAA/C,mBAAOE,EAAP,KAAgBC,EAAhB,KASM/G,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBACF8C,EAAQ4D,cAAgBE,EAFb,gCAGP9D,EAAQgE,cAAc,CAC1BJ,YAAaE,IAJF,OAMbD,IANa,2CAAH,sDAUd,OACE,sBAAKpG,UAAU,YAAf,UACE,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACE,uBACEd,SApBS,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZgH,EAAWhH,IAiBLW,KAAK,OACLgC,WAAS,EACT/B,YAAY,eACZZ,MAAO+G,EACPrG,UAAU,cAEZ,uBACEC,KAAK,SACLX,MAAM,SACNU,UAAU,UACVuE,MAAO,CACLc,UAAW,GACXmB,gBAAiB,QACjBZ,MAAO,cAIb,sBAAM5F,UAAU,2BAA2BI,QAxCzB,kBAAMlC,EAAYuI,WAwCpC,0BCGSC,EArCG,SAAC,GAAuC,IAArCN,EAAoC,EAApCA,SAAUO,EAA0B,EAA1BA,WAAYpE,EAAc,EAAdA,QACzC,OACE,eAAC,IAAD,WACGoE,GAAc,cAAC,EAAD,CAAYpE,QAASA,IACpC,cAAC,IAAD,UACGoE,EACC,sBACEpC,MAAO,CACLqC,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRzB,UAAW,GACXE,QAAS,OACTC,eAAgB,UAPpB,UAUE,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMzE,QAASA,MAGjB,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,WAAlB,SACE,cAACC,EAAD,CAAS1E,QAASA,EAAS6D,SAAUA,SAIzC,qCACE,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUE,KAAK,IAAIzB,GAAG,eCMnB0B,MA3Cf,WACE,MAAwB1I,oBAAS,GAAjC,mBAAO2I,EAAP,KAAaC,EAAb,KAEA,EAA8B5I,mBAAS,MAAvC,mBAAO8D,EAAP,KAAgB+E,EAAhB,KAuBA,OAtBAxC,qBAAU,WACR5G,EAAYqJ,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACTrB,YAAaqB,EAAKrB,YAClBpD,IAAKyE,EAAKzE,IACVwD,cAAe,SAACkB,GAAD,OAASD,EAAKjB,cAAckB,KAGlC,MAEbJ,GAAQ,QAET,IAUD,qCACGD,EACC,cAAC,EAAD,CACEhB,SAZS,WACf,IAAMoB,EAAOtJ,EAAYwJ,YACzBJ,EAAW,CACTnB,YAAaqB,EAAKrB,YAClBpD,IAAKyE,EAAKzE,IACVwD,cAAe,SAACkB,GAAD,OAASD,EAAKjB,cAAckB,OAQvCd,WAAYgB,QAAQpF,GACpBA,QAASA,IAGX,+CAEF,yBAAQvC,UAAU,mBAAlB,mBACU,IAAIqD,MAAOuE,cADrB,oB,OCrCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.787ad8ff.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const stService = firebase.storage();\n","import { authService } from \"googlebase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [err, setErr] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setErr(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          onChange={onChange}\n          value={email}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          onChange={onChange}\n          value={password}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Sign Up\" : \"Login\"}\n        />\n        {err && <span className=\"authError\">{err}</span>}\n      </form>\n      <span className=\"authSwitch\" onClick={toggleAccount}>\n        {newAccount ? \"Login\" : \"Sign Up\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"googlebase\";\nimport React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <h1 className=\"errorchat-title\">Welcome to ErrorChat</h1>\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Login with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Login with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, stService } from \"googlebase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Chat = ({ chatObj, isOwner }) => {\n  const [edit, setEdit] = useState(false);\n  const [newChat, setNewChat] = useState(chatObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\n      \"This action can never be recovered. Do you still want to delete chat?\"\n    );\n\n    if (ok) {\n      await dbService.doc(`chats/${chatObj.id}`).delete();\n      await stService.refFromURL(chatObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEdit = () => setEdit((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(chatObj, newChat);\n    await dbService.doc(`chats/${chatObj.id}`).update({\n      text: newChat,\n    });\n    setEdit(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewChat(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {edit ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit Your Chat!\"\n              value={newChat}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" className=\"formBtn\" value=\"Update\" />\n          </form>\n          <button onClick={toggleEdit} className=\"formBtn cancelBtn\">\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          {\" \"}\n          <h4>{chatObj.text}</h4>\n          {chatObj.attachmentUrl && <img src={chatObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEdit}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","import { dbService, stService } from \"googlebase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ChatFactory = ({ userObj }) => {\n  const [chat, setChat] = useState(\"\");\n  const [fileUrl, setfileUrl] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (chat === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (fileUrl !== \"\") {\n      const fileRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await fileRef.putString(fileUrl, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const chatObj = {\n      text: chat,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"chats\").add(chatObj);\n    setChat(\"\");\n    setfileUrl(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setChat(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const oneFile = files[0];\n    const fileReader = new FileReader();\n    fileReader.onloadend = (doneEvent) => {\n      const {\n        currentTarget: { result },\n      } = doneEvent;\n      setfileUrl(result);\n    };\n    fileReader.readAsDataURL(oneFile);\n  };\n  const onClearPhotoClick = () => setfileUrl(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={chat}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={160}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {fileUrl && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={fileUrl}\n            style={{\n              backgroundImage: fileUrl,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearPhotoClick}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ChatFactory;\n","import { dbService, stService } from \"googlebase\";\nimport React, { useEffect, useState } from \"react\";\nimport Chat from \"components/Chat.js\";\nimport ChatFactory from \"components/ChatFactory\";\n\nconst Home = ({ userObj }) => {\n  const [chats, setChats] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"chats\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const chatArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setChats(chatArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <ChatFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {chats.map((chat) => (\n          <Chat\n            key={chat.id}\n            chatObj={chat}\n            isOwner={chat.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faComment} color={\"lightsalmon\"} size=\"3x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"lightsalmon\"} size=\"3x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}'s Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import userEvent from \"@testing-library/user-event\";\nimport { authService, dbService } from \"googlebase\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default ({ loadUser, userObj }) => {\n  const [newName, setNewName] = useState(userObj.displayName);\n  const onLogOutClick = () => authService.signOut();\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newName) {\n      await userObj.updateProfile({\n        displayName: newName,\n      });\n      loadUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n            backgroundColor: \"black\",\n            color: \"white\",\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ loadUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} loadUser={loadUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"googlebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (any) => user.updateProfile(any),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const loadUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (any) => user.updateProfile(any),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          loadUser={loadUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        <h2>Loading......</h2>\n      )}\n      <footer className=\"copyright-margin\">\n        &copy; {new Date().getFullYear()} ErrorChat\n      </footer>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}